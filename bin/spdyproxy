#!/usr/bin/env node

var path = require('path')
  , pkg = require('../package.json')
  , version = pkg.version
  , colors = require('colors')
  , spdyProxy = require('../lib/server')
  , fs = require('fs')
  , opts = require('optimist')
    .usage('Usage: $0')
    .options({
      key: {
        demand: true,
        alias: 'k',
        description: 'path to SSL key'
      },
      cert: {
        demand: true,
        alias: 'c',
        description: 'path to SSL certificate'
      },
      ca: {
        demand: false,
        alias: 'a',
        description: 'path to SSL CA certificate'
      },
      port: {
        demand: false,
        alias: 'p',
        description: 'proxy port',
        default: 44300
      },
      auth: {
        demand: false,
        alias: 'u',
        description: 'path to basic auth database'
      },
      verbose: {
        demand: false,
        alias: 'v',
        description: 'enable verbose logging',
        default: false
      }
    }).argv;

opts.version = version;
opts.key = fs.readFileSync(path.resolve(opts.key));
opts.cert = fs.readFileSync(path.resolve(opts.cert));
if (opts.ca) opts.ca = fs.readFileSync(path.resolve(opts.ca));
if (opts.auth) opts.auth = require('../lib/auth').init(fs.readFileSync(path.resolve(opts.auth), 'utf-8'));

process.on('uncaughtException', function(e) {
  console.error('Error: '.red + e);
});

var proxy = new spdyProxy.createServer(opts);
proxy.listen(opts.port);

console.log(
  'SPDY Proxy'.green + ' ' + 'v%s'.grey + ' listening on port ' + '%s'.yellow,
  version,
  opts.port
);
